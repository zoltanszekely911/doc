<Window x:Class="WalkOfProductLibrary.DialogusWindows"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:s="clr-namespace:System;assembly=mscorlib" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ef="clr-namespace:WalkOfProduct.EntityModel;assembly=EntityModelLibrary"
        xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
        xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        mc:Ignorable="d" 
        Title="Dialógus megjelenítő" WindowStartupLocation="CenterScreen" WindowState="Maximized" Loaded="Window_Loaded" Closing="Window_Closing" >
    
    <Window.Resources>
        <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <BulletDecorator x:Name="Bullet" Background="#00FFFFFF">
                            <BulletDecorator.Bullet>
                                <mwt:BulletChrome Height="26" Width="26" Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" IsChecked="{TemplateBinding ToggleButton.IsChecked}" IsRound="True"  >
                                    <mwt:BulletChrome.Effect>
                                        <DropShadowEffect BlurRadius="5" ShadowDepth="2" />
                                    </mwt:BulletChrome.Effect>
                                </mwt:BulletChrome>
                            </BulletDecorator.Bullet>
                            <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ContentControl.HasContent">
                                <Setter Property="FrameworkElement.FocusVisualStyle">
                                    <Setter.Value>
                                        <Style TargetType="IFrameworkInputElement">
                                            <Style.Resources>
                                                <ResourceDictionary />
                                            </Style.Resources>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="14,0,0,0" SnapsToDevicePixels="True" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Control.Padding">
                                    <Setter.Value>
                                        <Thickness>4,0,0,0</Thickness>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled">
                                <Setter Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Height="26" Width="26"  Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Fill="Blue" Margin="1" Opacity="0" Stretch="Fill"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="DarkGray" Margin="2" Opacity="0"/>
                                </Grid>
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="5" ShadowDepth="2" />
                                </Border.Effect>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="True">
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFF3F9FF"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF5593FF"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFD9ECFF"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF212121"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid x:Name="MainGrid">
        <Border BorderThickness="1" BorderBrush="Aquamarine" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="{Binding Kerdes}" TextWrapping="Wrap" Foreground="Navy" FontFamily="Century Gothic" FontSize="26" FontStretch="UltraExpanded" 
                   FontStyle="Normal" FontWeight="UltraBold"  VerticalAlignment="Top" 
                    Margin="20,20,20,0">
                </TextBlock>
                <ListBox x:Name="ValaszokItemControl" Grid.Row="1" Margin="20,5,20,0" ItemsSource="{Binding Valaszok}"  IsTabStop="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" >
                    <ListBox.Effect>
                        <DropShadowEffect ShadowDepth="5" Direction="320" Color="LightGray" Opacity="0.5"/>
                    </ListBox.Effect>
                    <ListBox.Background>
                        <ImageBrush ImageSource="/WalkOfProductLibrary;component/Images/logo_transparent.png" Stretch="None" Opacity="0.4"  >
                        </ImageBrush>
                    </ListBox.Background>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Height" Value="60" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel x:Name="ValaszokStackPanel" >
                                <RadioButton x:Name="ValaszRadioButton" GroupName="ValaszokCsoport" Style="{StaticResource RadioButtonStyle}" >
                                    <RadioButton.Content>
                                        <TextBlock Text="{Binding Szoveg}" FontSize="26" TextWrapping="Wrap" FontFamily="Arial" Foreground="Black" />
                                    </RadioButton.Content>
                                </RadioButton>
                                <CheckBox x:Name="ValaszCheckBox" 
                                        Style="{StaticResource CheckBoxStyle}" 
                                        Checked="Valasz_Checked" 
                                        Unchecked="Valasz_Checked">
                                    <CheckBox.Content>
                                        <TextBlock Text="{Binding Szoveg}" FontSize="26" TextWrapping="Wrap" FontFamily="Arial" Foreground="Black" />
                                    </CheckBox.Content>
                                </CheckBox>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=EgyValasz, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="True">
                                    <Setter TargetName="ValaszRadioButton" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="ValaszCheckBox" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=EgyValasz, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="False">
                                    <Setter TargetName="ValaszRadioButton" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="ValaszCheckBox" Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <DockPanel HorizontalAlignment="Center" Grid.Row="2">
                    <Button x:Name="Mentes"  Grid.Row="2" Width="130" Height="45" BorderBrush="Black" BorderThickness="1" Background="LightGray" Foreground="Black" Margin="5,5,5,5" Click="Mentes_Click">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="24"></Setter>
                            </Style>
                        </Button.Resources>
                        <Button.Content>
                            <StackPanel>
                                <TextBlock Text="Elküld" FontSize="26" Foreground="Black" />
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <Button x:Name="Megsem"  Grid.Row="2" Width="130" Height="45" Margin="5,5,5,5" Click="Megsem_Click" >
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="10"></Setter>
                            </Style>
                        </Button.Resources>
                        <Button.Content>
                            <StackPanel>
                                <TextBlock Text="Mégsem" FontSize="26" Foreground="Black" />
                            </StackPanel>
                        </Button.Content>
                    </Button>
                </DockPanel>
            </Grid>
        </Border>
    </Grid>
</Window>
